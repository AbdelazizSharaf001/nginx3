name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build the Docker image
      env:
        CACHE_IMAGE: macbre/nginx-brotli:latest
        
        # @see https://docs.docker.com/develop/develop-images/build_enhancements/
        COMPOSE_DOCKER_CLI_BUILD: "1"
        DOCKER_BUILDKIT: "1"

      run: |
        # build an image using the current Docker Hub container image as a layers cache

        # @see https://docs.docker.com/engine/reference/commandline/build/#specifying-external-cache-sources
        # no need to "docker pull $CACHE_IMAGE", BuildKit is clever enough to pull it when needed
        docker build . \
          --tag macbre/nginx \
           --build-arg BUILDKIT_INLINE_CACHE=1 \
          --cache-from $CACHE_IMAGE
        docker images

    - name: Run nginx -V
      run: docker run -t macbre/nginx nginx -V

    - name: Serve a static asset
      run: |
        ./run-docker.sh &

        sleep 2; docker ps
        curl -v --compressed 0.0.0.0:8888 2>&1 | tee /tmp/out

        grep --fixed-strings '< Server: nginx' /tmp/out
        grep --fixed-strings '< Content-Encoding: br' /tmp/out
        grep --fixed-strings '<p>It works!</p>' /tmp/out


        curl -v --compressed --insecure https://0.0.0.0:8889 2>&1 | tee /tmp/h2

        grep --fixed-strings '< HTTP/2 200' /tmp/h2
        grep --fixed-strings '< server: nginx' /tmp/h2
        grep --fixed-strings '<p>It works!</p>' /tmp/h2


        docker run --rm --network host ymuski/curl-http3 \
          curl -v --insecure https://localhost:8889 --http3 2>&1 | tee /tmp/h3

        grep --fixed-strings '< HTTP/3 200' /tmp/h3
        grep --fixed-strings '< server: nginx' /tmp/h3
        grep --fixed-strings '< alt-svc: h3-27=":8889"; ma=86400, h3-28=":8889"; ma=86400, h3-29=":8889"; ma=86400' /tmp/h3
        grep --fixed-strings '<p>It works!</p>' /tmp/h3

        docker logs test_nginx
